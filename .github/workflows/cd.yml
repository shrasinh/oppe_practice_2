name: Deploy ML Pipeline to GKE

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1
  GKE_CLUSTER: mlops-assignment-cluster
  GKE_ZONE: us-east1-b
  DEPLOYMENT_NAME: mlops-assignment-app
  SERVICE_NAME: mlops-assignment-service
  REPOSITORY: mlops-assignment-artifacts
  IMAGE: mlops-assignment-fastapi

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      
      - name: 'Docker auth'
        run: |-
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev --quiet

      - name: Build Docker image
        run: |-
          docker build \
            --file deployment/Dockerfile \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest" \
            .

      - name: Publish Docker image to Artifact Registry
        run: |-
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest"

      - name: Get GKE credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
         cluster_name: ${{ env.GKE_CLUSTER }}
         location: ${{ env.GKE_ZONE }}

      - name: Deploy to GKE
        run: |-
          # Replace image url in deployment.yaml
          sed -i "s|image:.*|image: $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA|g" k8s/deployment.yaml
          
          # Apply Kubernetes manifests
          kubectl apply -f k8s/
          
          # Wait for rollout to complete
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          
          # Get the external IP
          kubectl get services -o wide

      - name: Setup CML
        uses: iterative/setup-cml@v2

      - name: Get Service IP and Comment using CML
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          
          # Get the external IP of the service
          EXTERNAL_IP=$(kubectl get service $SERVICE_NAME -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null)
          EXTERNAL_IP=${EXTERNAL_IP:-"Pending"}
          
          # Create CML comment
          cat > cml_report.md << EOF
          ## ML Pipeline Deployment Complete!
          
          **Deployment Status**: Successfully deployed to GKE cluster \`$GKE_CLUSTER\`
          
          **Service Details**:
          - **Service Name**: $SERVICE_NAME
          - **External IP**: \`${EXTERNAL_IP}\`
          - **Cluster**: $GKE_CLUSTER (${GKE_ZONE})
          - **Image**: $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        
          **Deployment Time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          EOF
          
          # Send CML comment
          cml comment create cml_report.md
